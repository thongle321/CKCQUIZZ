// <auto-generated />
using System;
using CKCQUIZZ.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CKCQUIZZ.Server.Migrations
{
    [DbContext(typeof(CkcquizzContext))]
    partial class CkcquizzContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CKCQUIZZ.Server.Models.CauHoi", b =>
                {
                    b.Property<int>("Macauhoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("macauhoi");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Macauhoi"));

                    b.Property<bool?>("Daodapan")
                        .HasColumnType("bit")
                        .HasColumnName("daodapan");

                    b.Property<int>("Dokho")
                        .HasColumnType("int")
                        .HasColumnName("dokho");

                    b.Property<int>("Machuong")
                        .HasColumnType("int")
                        .HasColumnName("machuong");

                    b.Property<int>("Mamonhoc")
                        .HasColumnType("int")
                        .HasColumnName("mamonhoc");

                    b.Property<string>("Nguoitao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoitao");

                    b.Property<string>("Noidung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("noidung");

                    b.Property<bool>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangthai");

                    b.HasKey("Macauhoi")
                        .HasName("PK__CauHoi__95E62F03B214AAA6");

                    b.HasIndex("Machuong");

                    b.HasIndex("Mamonhoc");

                    b.HasIndex("Nguoitao");

                    b.ToTable("CauHoi", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.CauTraLoi", b =>
                {
                    b.Property<int>("Macautl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("macautl");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Macautl"));

                    b.Property<string>("Cautltuluan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cautltuluan");

                    b.Property<bool>("Dapan")
                        .HasColumnType("bit")
                        .HasColumnName("dapan");

                    b.Property<string>("Hinhanh")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("hinhanh");

                    b.Property<int>("Macauhoi")
                        .HasColumnType("int")
                        .HasColumnName("macauhoi");

                    b.Property<string>("Noidungtl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("noidungtl");

                    b.HasKey("Macautl")
                        .HasName("PK__CauTraLo__190C43E2D12394B7");

                    b.HasIndex("Macauhoi");

                    b.ToTable("CauTraLoi", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietDeThi", b =>
                {
                    b.Property<int>("Made")
                        .HasColumnType("int")
                        .HasColumnName("made");

                    b.Property<int>("Macauhoi")
                        .HasColumnType("int")
                        .HasColumnName("macauhoi");

                    b.Property<double>("Diemcauhoi")
                        .HasColumnType("float")
                        .HasColumnName("diemcauhoi");

                    b.Property<int?>("Thutu")
                        .HasColumnType("int")
                        .HasColumnName("thutu");

                    b.HasKey("Made", "Macauhoi")
                        .HasName("PK__ChiTietD__537F82A8D7C214BF");

                    b.HasIndex("Macauhoi");

                    b.ToTable("ChiTietDeThi", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietKetQua", b =>
                {
                    b.Property<int>("Makq")
                        .HasColumnType("int")
                        .HasColumnName("makq");

                    b.Property<int>("Macauhoi")
                        .HasColumnType("int")
                        .HasColumnName("macauhoi");

                    b.Property<double?>("Diemketqua")
                        .HasColumnType("float")
                        .HasColumnName("diemketqua");

                    b.HasKey("Makq", "Macauhoi")
                        .HasName("PK__ChiTietK__537FD9B3DDAB731B");

                    b.HasIndex("Macauhoi");

                    b.ToTable("ChiTietKetQua", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietLop", b =>
                {
                    b.Property<int>("Malop")
                        .HasColumnType("int")
                        .HasColumnName("malop");

                    b.Property<string>("Manguoidung")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("0")
                        .HasColumnName("manguoidung");

                    b.Property<bool?>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangthai");

                    b.HasKey("Malop", "Manguoidung")
                        .HasName("PK__ChiTietN__494FA06D1DCEF6FB");

                    b.HasIndex("Manguoidung");

                    b.ToTable("ChiTietLop", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietTraLoiSinhVien", b =>
                {
                    b.Property<int>("Matraloichitiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("matraloichitiet");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Matraloichitiet"));

                    b.Property<int>("Dapansv")
                        .HasColumnType("int")
                        .HasColumnName("dapansv");

                    b.Property<int>("Macauhoi")
                        .HasColumnType("int")
                        .HasColumnName("macauhoi");

                    b.Property<int>("Macautl")
                        .HasColumnType("int")
                        .HasColumnName("macautl");

                    b.Property<int>("Makq")
                        .HasColumnType("int")
                        .HasColumnName("makq");

                    b.HasKey("Matraloichitiet");

                    b.HasIndex("Macautl");

                    b.HasIndex("Makq", "Macauhoi");

                    b.ToTable("ChiTietTraLoiSinhVien", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.Chuong", b =>
                {
                    b.Property<int>("Machuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("machuong");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Machuong"));

                    b.Property<int>("Mamonhoc")
                        .HasColumnType("int")
                        .HasColumnName("mamonhoc");

                    b.Property<string>("Tenchuong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenchuong");

                    b.Property<bool?>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangthai");

                    b.HasKey("Machuong")
                        .HasName("PK__Chuong__3BE2D1BAE7A2D2AF");

                    b.HasIndex("Mamonhoc");

                    b.ToTable("Chuong", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.DeThi", b =>
                {
                    b.Property<int>("Made")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("made");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Made"));

                    b.Property<bool?>("Hienthibailam")
                        .HasColumnType("bit")
                        .HasColumnName("hienthibailam");

                    b.Property<int?>("Loaide")
                        .HasColumnType("int")
                        .HasColumnName("loaide");

                    b.Property<int?>("Monthi")
                        .HasColumnType("int")
                        .HasColumnName("monthi");

                    b.Property<string>("Nguoitao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoitao");

                    b.Property<int?>("Socaude")
                        .HasColumnType("int")
                        .HasColumnName("socaude");

                    b.Property<int?>("Socaukho")
                        .HasColumnType("int")
                        .HasColumnName("socaukho");

                    b.Property<int?>("Socautb")
                        .HasColumnType("int")
                        .HasColumnName("socautb");

                    b.Property<string>("Tende")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tende");

                    b.Property<DateTime?>("Thoigianketthuc")
                        .HasColumnType("datetime")
                        .HasColumnName("thoigianketthuc");

                    b.Property<DateTime?>("Thoigiantao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("thoigiantao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Thoigiantbatdau")
                        .HasColumnType("datetime")
                        .HasColumnName("thoigiantbatdau");

                    b.Property<int?>("Thoigianthi")
                        .HasColumnType("int")
                        .HasColumnName("thoigianthi");

                    b.Property<bool?>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangthai");

                    b.Property<bool?>("Troncauhoi")
                        .HasColumnType("bit")
                        .HasColumnName("troncauhoi");

                    b.Property<bool?>("Xemdapan")
                        .HasColumnType("bit")
                        .HasColumnName("xemdapan");

                    b.Property<bool?>("Xemdiemthi")
                        .HasColumnType("bit")
                        .HasColumnName("xemdiemthi");

                    b.HasKey("Made")
                        .HasName("PK__DeThi__7A21E058535AB3D4");

                    b.HasIndex("Nguoitao");

                    b.ToTable("DeThi", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.KetQua", b =>
                {
                    b.Property<int>("Makq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("makq");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Makq"));

                    b.Property<string>("Manguoidung")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("manguoidung");

                    b.Property<double?>("Diemthi")
                        .HasColumnType("float")
                        .HasColumnName("diemthi");

                    b.Property<int>("Made")
                        .HasColumnType("int")
                        .HasColumnName("made");

                    b.Property<int?>("Socaudung")
                        .HasColumnType("int")
                        .HasColumnName("socaudung");

                    b.Property<int?>("Solanchuyentab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("solanchuyentab");

                    b.Property<int?>("Thoigiansolambai")
                        .HasColumnType("int")
                        .HasColumnName("thoigiansolambai");

                    b.Property<DateTime?>("Thoigianvaothi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("thoigianvaothi")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Makq", "Manguoidung")
                        .HasName("PK__KetQua__08F4C84DCC478C58");

                    b.HasIndex("Made");

                    b.HasIndex("Manguoidung");

                    b.HasIndex(new[] { "Makq" }, "UQ__KetQua__7A21BB42CFFF991C")
                        .IsUnique();

                    b.ToTable("KetQua", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.Lop", b =>
                {
                    b.Property<int>("Malop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("malop");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Malop"));

                    b.Property<string>("Ghichu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ghichu");

                    b.Property<string>("Giangvien")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("giangvien");

                    b.Property<bool?>("Hienthi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("hienthi");

                    b.Property<int?>("Hocky")
                        .HasColumnType("int")
                        .HasColumnName("hocky");

                    b.Property<string>("Mamoi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mamoi");

                    b.Property<int>("Mamonhoc")
                        .HasColumnType("int")
                        .HasColumnName("mamonhoc");

                    b.Property<int?>("Namhoc")
                        .HasColumnType("int")
                        .HasColumnName("namhoc");

                    b.Property<byte?>("Siso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0)
                        .HasColumnName("siso");

                    b.Property<string>("Tenlop")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenlop");

                    b.Property<bool?>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangthai");

                    b.HasKey("Malop")
                        .HasName("PK__Nhom__3B9AD363AD00C409");

                    b.HasIndex("Giangvien");

                    b.HasIndex("Mamonhoc");

                    b.ToTable("Lop", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.MonHoc", b =>
                {
                    b.Property<int>("Mamonhoc")
                        .HasColumnType("int")
                        .HasColumnName("mamonhoc");

                    b.Property<int>("Sotietlythuyet")
                        .HasColumnType("int")
                        .HasColumnName("sotietlythuyet");

                    b.Property<int>("Sotietthuchanh")
                        .HasColumnType("int")
                        .HasColumnName("sotietthuchanh");

                    b.Property<int>("Sotinchi")
                        .HasColumnType("int")
                        .HasColumnName("sotinchi");

                    b.Property<string>("Tenmonhoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenmonhoc");

                    b.Property<bool>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangthai");

                    b.HasKey("Mamonhoc")
                        .HasName("PK__MonHoc__A2CD2A19EB7BC4BE");

                    b.ToTable("MonHoc", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.NguoiDung", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("avatar");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("Gioitinh")
                        .HasColumnType("bit")
                        .HasColumnName("gioitinh");

                    b.Property<string>("Hoten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hoten");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Manhomquyen")
                        .HasColumnType("int")
                        .HasColumnName("manhomquyen");

                    b.Property<DateTime?>("Ngaysinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngaysinh")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("Ngaythamgia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ngaythamgia")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangthai");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK__NguoiDun__3213E83F5455D483");

                    b.HasIndex("Manhomquyen");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.NhomQuyen", b =>
                {
                    b.Property<int>("Manhomquyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("manhomquyen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Manhomquyen"));

                    b.Property<string>("Tennhomquyen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tennhomquyen");

                    b.Property<bool>("Trangthai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("trangthai");

                    b.HasKey("Manhomquyen")
                        .HasName("PK__NhomQuye__550F474EE42BB2C8");

                    b.ToTable("NhomQuyen", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ThongBao", b =>
                {
                    b.Property<int>("Matb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("matb");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Matb"));

                    b.Property<string>("Nguoitao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("nguoitao");

                    b.Property<string>("Noidung")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("noidung");

                    b.Property<DateTime?>("Thoigiantao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("thoigiantao")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Matb")
                        .HasName("PK__ThongBao__7A217E61B4725307");

                    b.HasIndex("Nguoitao");

                    b.ToTable("ThongBao", (string)null);
                });

            modelBuilder.Entity("ChiTietThongBao", b =>
                {
                    b.Property<int>("Matb")
                        .HasColumnType("int")
                        .HasColumnName("matb");

                    b.Property<int>("Malop")
                        .HasColumnType("int")
                        .HasColumnName("malop");

                    b.HasKey("Matb", "Malop");

                    b.HasIndex("Malop");

                    b.ToTable("ChiTietThongBao", (string)null);
                });

            modelBuilder.Entity("GiaoDeThi", b =>
                {
                    b.Property<int>("Made")
                        .HasColumnType("int")
                        .HasColumnName("made");

                    b.Property<int>("Malop")
                        .HasColumnType("int")
                        .HasColumnName("malop");

                    b.HasKey("Made", "Malop")
                        .HasName("PK__GiaoDeTh__59984D6E5E6CD5F1");

                    b.HasIndex("Malop");

                    b.ToTable("GiaoDeThi", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.CauHoi", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.Chuong", "MachuongNavigation")
                        .WithMany("CauHois")
                        .HasForeignKey("Machuong")
                        .IsRequired()
                        .HasConstraintName("FK__CauHoi__machuong__7D439ABD");

                    b.HasOne("CKCQUIZZ.Server.Models.MonHoc", "MamonhocNavigation")
                        .WithMany("CauHois")
                        .HasForeignKey("Mamonhoc")
                        .IsRequired()
                        .HasConstraintName("FK__CauHoi__mamonhoc__7E37BEF6");

                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", "NguoitaoNavigation")
                        .WithMany("CauHois")
                        .HasForeignKey("Nguoitao")
                        .HasConstraintName("FK_CauHoi_NguoiDung");

                    b.Navigation("MachuongNavigation");

                    b.Navigation("MamonhocNavigation");

                    b.Navigation("NguoitaoNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.CauTraLoi", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.CauHoi", "MacauhoiNavigation")
                        .WithMany("CauTraLois")
                        .HasForeignKey("Macauhoi")
                        .IsRequired()
                        .HasConstraintName("FK__CauTraLoi__macau__7F2BE32F");

                    b.Navigation("MacauhoiNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietDeThi", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.CauHoi", "MacauhoiNavigation")
                        .WithMany("ChiTietDeThis")
                        .HasForeignKey("Macauhoi")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietDe__macau__00200768");

                    b.HasOne("CKCQUIZZ.Server.Models.DeThi", "MadeNavigation")
                        .WithMany("ChiTietDeThis")
                        .HasForeignKey("Made")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietDeT__made__01142BA1");

                    b.Navigation("MacauhoiNavigation");

                    b.Navigation("MadeNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietKetQua", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.CauHoi", "MacauhoiNavigation")
                        .WithMany("ChiTietKetQuas")
                        .HasForeignKey("Macauhoi")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietKe__macau__02084FDA");

                    b.HasOne("CKCQUIZZ.Server.Models.KetQua", "MakqNavigation")
                        .WithMany("ChiTietKetQuas")
                        .HasForeignKey("Makq")
                        .HasPrincipalKey("Makq")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietKet__makq__03F0984C");

                    b.Navigation("MacauhoiNavigation");

                    b.Navigation("MakqNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietLop", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.Lop", "MalopNavigation")
                        .WithMany("ChiTietLops")
                        .HasForeignKey("Malop")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietNh__manho__04E4BC85");

                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", "ManguoidungNavigation")
                        .WithMany("ChiTietLops")
                        .HasForeignKey("Manguoidung")
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietNh__mangu__05D8E0BE");

                    b.Navigation("MalopNavigation");

                    b.Navigation("ManguoidungNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietTraLoiSinhVien", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.CauTraLoi", "MacautlNavigation")
                        .WithMany("ChiTietTraLoiSinhViens")
                        .HasForeignKey("Macautl")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietTraLoiSinhVien_CauTraLoi");

                    b.HasOne("CKCQUIZZ.Server.Models.ChiTietKetQua", "ChiTietKetQua")
                        .WithMany("ChiTietTraLoiSinhViens")
                        .HasForeignKey("Makq", "Macauhoi")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietTraLoiSinhVien_KetQua");

                    b.Navigation("ChiTietKetQua");

                    b.Navigation("MacautlNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.Chuong", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.MonHoc", "MamonhocNavigation")
                        .WithMany("Chuongs")
                        .HasForeignKey("Mamonhoc")
                        .IsRequired()
                        .HasConstraintName("FK__Chuong__mamonhoc__08B54D69");

                    b.Navigation("MamonhocNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.DeThi", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", "NguoitaoNavigation")
                        .WithMany("DeThis")
                        .HasForeignKey("Nguoitao")
                        .HasConstraintName("FK_DeThi_NguoiDung");

                    b.Navigation("NguoitaoNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.KetQua", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.DeThi", "MadeNavigation")
                        .WithMany("KetQuas")
                        .HasForeignKey("Made")
                        .IsRequired()
                        .HasConstraintName("FK__KetQua__made__0B91BA14");

                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", "ManguoidungNavigation")
                        .WithMany("KetQuas")
                        .HasForeignKey("Manguoidung")
                        .IsRequired()
                        .HasConstraintName("FK__KetQua__manguoid__0C85DE4D");

                    b.Navigation("MadeNavigation");

                    b.Navigation("ManguoidungNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.Lop", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", "GiangvienNavigation")
                        .WithMany("Lops")
                        .HasForeignKey("Giangvien")
                        .IsRequired()
                        .HasConstraintName("FK_Lop_NguoiDung");

                    b.HasOne("CKCQUIZZ.Server.Models.MonHoc", "MamonhocNavigation")
                        .WithMany("Lops")
                        .HasForeignKey("Mamonhoc")
                        .IsRequired()
                        .HasConstraintName("FK__Nhom__mamonhoc__0E6E26BF");

                    b.Navigation("GiangvienNavigation");

                    b.Navigation("MamonhocNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.NguoiDung", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.NhomQuyen", "ManhomquyenNavigation")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("Manhomquyen")
                        .HasConstraintName("FK__NguoiDung__manho__0D7A0286");

                    b.Navigation("ManhomquyenNavigation");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ThongBao", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", "NguoitaoNavigation")
                        .WithMany("ThongBaos")
                        .HasForeignKey("Nguoitao")
                        .IsRequired()
                        .HasConstraintName("FK_ThongBao_NguoiDung");

                    b.Navigation("NguoitaoNavigation");
                });

            modelBuilder.Entity("ChiTietThongBao", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.Lop", null)
                        .WithMany()
                        .HasForeignKey("Malop")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietThongBao_ChiTietThongBao");

                    b.HasOne("CKCQUIZZ.Server.Models.ThongBao", null)
                        .WithMany()
                        .HasForeignKey("Matb")
                        .IsRequired()
                        .HasConstraintName("FK_ChiTietThongBao_ThongBao");
                });

            modelBuilder.Entity("GiaoDeThi", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.DeThi", null)
                        .WithMany()
                        .HasForeignKey("Made")
                        .IsRequired()
                        .HasConstraintName("FK__GiaoDeThi__made__0A9D95DB");

                    b.HasOne("CKCQUIZZ.Server.Models.Lop", null)
                        .WithMany()
                        .HasForeignKey("Malop")
                        .IsRequired()
                        .HasConstraintName("FK__GiaoDeThi__manho__09A971A2");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CKCQUIZZ.Server.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.CauHoi", b =>
                {
                    b.Navigation("CauTraLois");

                    b.Navigation("ChiTietDeThis");

                    b.Navigation("ChiTietKetQuas");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.CauTraLoi", b =>
                {
                    b.Navigation("ChiTietTraLoiSinhViens");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.ChiTietKetQua", b =>
                {
                    b.Navigation("ChiTietTraLoiSinhViens");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.Chuong", b =>
                {
                    b.Navigation("CauHois");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.DeThi", b =>
                {
                    b.Navigation("ChiTietDeThis");

                    b.Navigation("KetQuas");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.KetQua", b =>
                {
                    b.Navigation("ChiTietKetQuas");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.Lop", b =>
                {
                    b.Navigation("ChiTietLops");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.MonHoc", b =>
                {
                    b.Navigation("CauHois");

                    b.Navigation("Chuongs");

                    b.Navigation("Lops");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.NguoiDung", b =>
                {
                    b.Navigation("CauHois");

                    b.Navigation("ChiTietLops");

                    b.Navigation("DeThis");

                    b.Navigation("KetQuas");

                    b.Navigation("Lops");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("CKCQUIZZ.Server.Models.NhomQuyen", b =>
                {
                    b.Navigation("NguoiDungs");
                });
#pragma warning restore 612, 618
        }
    }
}
