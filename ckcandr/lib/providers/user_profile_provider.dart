import 'package:flutter/foundation.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:ckcandr/models/user_model.dart';
import 'package:ckcandr/services/user_profile_service.dart';
import 'package:ckcandr/providers/user_provider.dart';

/// Provider cho th√¥ng tin chi ti·∫øt h·ªì s∆° ng∆∞·ªùi d√πng
final userProfileProvider = FutureProvider<dynamic>((ref) async {
  final currentUser = ref.watch(currentUserProvider);
  final userProfileService = ref.watch(userProfileServiceProvider);

  if (currentUser == null) {
    return null;
  }

  try {
    debugPrint('üîÑ UserProfile - ƒêang t·∫£i th√¥ng tin chi ti·∫øt cho user: ${currentUser.email}');
    final userProfile = await userProfileService.getUserProfile(currentUser.id);
    debugPrint('‚úÖ UserProfile - T·∫£i th√†nh c√¥ng th√¥ng tin user: ${userProfile?.hoten}');
    return userProfile;
  } catch (e) {
    debugPrint('‚ùå UserProfile - L·ªói khi t·∫£i th√¥ng tin user: $e');
    rethrow;
  }
});

/// Provider cho th·ªëng k√™ ng∆∞·ªùi d√πng theo role
final userStatsProvider = FutureProvider<UserStats>((ref) async {
  final currentUser = ref.watch(currentUserProvider);
  final userProfileService = ref.watch(userProfileServiceProvider);
  
  if (currentUser == null) {
    return UserStats.empty();
  }
  
  try {
    debugPrint('üîÑ UserStats - ƒêang t·∫£i th·ªëng k√™ cho user: ${currentUser.email}');
    final stats = await userProfileService.getUserStats(currentUser.id, currentUser.quyen.name);
    debugPrint('‚úÖ UserStats - T·∫£i th√†nh c√¥ng th·ªëng k√™ user');
    return stats;
  } catch (e) {
    debugPrint('‚ùå UserStats - L·ªói khi t·∫£i th·ªëng k√™ user: $e');
    return UserStats.empty();
  }
});

/// Model cho th·ªëng k√™ ng∆∞·ªùi d√πng
class UserStats {
  final int totalClasses;      // T·ªïng s·ªë l·ªõp (Teacher: l·ªõp qu·∫£n l√Ω, Student: l·ªõp tham gia)
  final int totalStudents;     // T·ªïng s·ªë sinh vi√™n (ch·ªâ cho Teacher)
  final int totalQuizzes;      // T·ªïng s·ªë b√†i ki·ªÉm tra
  final int completedQuizzes;  // S·ªë b√†i ki·ªÉm tra ƒë√£ ho√†n th√†nh (ch·ªâ cho Student)
  final String description;    // M√¥ t·∫£ th·ªëng k√™

  UserStats({
    required this.totalClasses,
    required this.totalStudents,
    required this.totalQuizzes,
    required this.completedQuizzes,
    required this.description,
  });

  factory UserStats.empty() {
    return UserStats(
      totalClasses: 0,
      totalStudents: 0,
      totalQuizzes: 0,
      completedQuizzes: 0,
      description: 'Ch∆∞a c√≥ d·ªØ li·ªáu th·ªëng k√™',
    );
  }

  factory UserStats.forTeacher({
    required int totalClasses,
    required int totalStudents,
    required int totalQuizzes,
  }) {
    return UserStats(
      totalClasses: totalClasses,
      totalStudents: totalStudents,
      totalQuizzes: totalQuizzes,
      completedQuizzes: 0,
      description: 'Th·ªëng k√™ gi·∫£ng vi√™n',
    );
  }

  factory UserStats.forStudent({
    required int totalClasses,
    required int totalQuizzes,
    required int completedQuizzes,
  }) {
    return UserStats(
      totalClasses: totalClasses,
      totalStudents: 0,
      totalQuizzes: totalQuizzes,
      completedQuizzes: completedQuizzes,
      description: 'Th·ªëng k√™ sinh vi√™n',
    );
  }

  factory UserStats.forAdmin({
    required int totalClasses,
    required int totalStudents,
    required int totalQuizzes,
  }) {
    return UserStats(
      totalClasses: totalClasses,
      totalStudents: totalStudents,
      totalQuizzes: totalQuizzes,
      completedQuizzes: 0,
      description: 'Th·ªëng k√™ qu·∫£n tr·ªã vi√™n',
    );
  }
}
